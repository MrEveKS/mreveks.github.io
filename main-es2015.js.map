{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/shared/classes/fruit.class.ts","webpack:///./src/shared/classes/game.class.ts","webpack:///./src/shared/classes/stake.class.ts","webpack:///./src/shared/directives/snake.directive.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<canvas id=\\\"snake\\\" width=\\\"800\\\" height=\\\"600\\\" snake>HTML 5 не поддерживется</canvas>\\n\\n<router-outlet></router-outlet>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'snake';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { SnakeDirective } from '../shared/directives/snake.directive';\r\n\n@NgModule({\n  declarations: [\n    SnakeDirective,\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Fruit {\r\n  private FRUIT_SIZE: number = 25;\r\n\r\n  private _currentFruitXPosition: number;\r\n  private _currentFruitYPosition: number;\r\n\r\n  get fruitSize(): number {\r\n    return this.FRUIT_SIZE;\r\n  }\r\n\r\n  get fruitXPosition(): number {\r\n    return this._currentFruitXPosition;\r\n  }\r\n\r\n  get fruitYPosition(): number {\r\n    return this._currentFruitYPosition;\r\n  }\r\n\r\n  public constructor(private _width: number, private _height: number,\r\n    private _failCheck: (x: number, y: number) => boolean) { }\r\n\r\n  public generateFruit() {\r\n    this._currentFruitXPosition = this.generateCoordinate(this._width);\r\n    this._currentFruitYPosition = this.generateCoordinate(this._height);\r\n\r\n    if (this._failCheck(this._currentFruitXPosition, this._currentFruitYPosition)) this.generateFruit();\r\n  }\r\n\r\n  private generateCoordinate(value: number): number {\r\n    return Math.round((value / this.FRUIT_SIZE - 1) * Math.random()) * this.FRUIT_SIZE;\r\n  }\r\n}\r\n","import { Output, EventEmitter } from '@angular/core';\r\n\r\nexport class Game {\r\n  private _gameProcessTimer: any;\r\n  private _delay: number;\r\n\r\n  @Output() gameStep = new EventEmitter<{}>();\r\n\r\n  public constructor() {\r\n    this.initilize();\r\n  }\r\n\r\n  public start() {\r\n    this._gameProcessTimer = setInterval(this.eventEmit.bind(this), this._delay);\r\n  }\r\n\r\n  public stop() {\r\n    clearInterval(this._gameProcessTimer);\r\n  }\r\n\r\n  private initilize(): void {\r\n    this._delay = 1000 / 5;\r\n  }\r\n\r\n  private eventEmit(): void {\r\n    this.gameStep.emit({});\r\n  }\r\n}\r\n","export class Snake {\r\n  private SNAKE_SIZE: number = 25;\r\n\r\n  private _motionVectorX: number;\r\n  private _motionVectorY: number;\r\n\r\n  private _snakeXpositions: number[];\r\n  private _snakeYpositions: number[];\r\n\r\n  private _currentSnakeXPosition: number;\r\n  private _currentSnakeYPosition: number;\r\n\r\n  get snakeSize(): number {\r\n    return this.SNAKE_SIZE;\r\n  }\r\n\r\n  get snakeXPosition(): number {\r\n    return this._currentSnakeXPosition;\r\n  }\r\n\r\n  get snakeYPosition(): number {\r\n    return this._currentSnakeYPosition;\r\n  }\r\n\r\n  get snakeXPositions(): number[] {\r\n    return this._snakeXpositions;\r\n  }\r\n\r\n  get snakeYPositions(): number[] {\r\n    return this._snakeYpositions;\r\n  }\r\n\r\n  set motionVectorX(value) {\r\n    this._motionVectorX = value;\r\n  }\r\n\r\n  set motionVectorY(value) {\r\n    this._motionVectorY = value;\r\n  }\r\n\r\n  public constructor(private _width: number, private _height: number) {\r\n    this.initilize();\r\n  }\r\n\r\n  public updateSnakePosition(): void {\r\n    this._currentSnakeXPosition = this.updateCoordinate(this._currentSnakeXPosition, 0, this._width, this._motionVectorX);\r\n    this._currentSnakeYPosition = this.updateCoordinate(this._currentSnakeYPosition, 0, this._height, this._motionVectorY);\r\n  }\r\n\r\n  public checkCollision(): boolean {\r\n    return this.check(this._currentSnakeXPosition, this._currentSnakeYPosition);\r\n  }\r\n\r\n  public failCheck(x: number, y: number): boolean {\r\n    return this.check(x, y);\r\n  }\r\n\r\n  private check(x: number, y: number): boolean {\r\n    if (this._snakeXpositions.indexOf(x) !== -1 && this._snakeYpositions.indexOf(y) !== -1) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public snakeStape() {\r\n    this._snakeXpositions.unshift(this._currentSnakeXPosition);\r\n    this._snakeYpositions.unshift(this._currentSnakeYPosition);\r\n  }\r\n\r\n  public snakeNoResize() {\r\n    this._snakeXpositions.pop();\r\n    this._snakeYpositions.pop();\r\n  }\r\n\r\n  public resetSnake(): void {\r\n    this.setDefaultValues();\r\n  }\r\n\r\n  private updateCoordinate(currentValue: number, minValue: number, maxValue: number, vector: number): number {\r\n    currentValue += this.SNAKE_SIZE * vector;\r\n    if (currentValue > maxValue) {\r\n      currentValue = 0;\r\n    } else if (currentValue < minValue) {\r\n      currentValue = maxValue - this.SNAKE_SIZE;\r\n    }\r\n\r\n    return currentValue;\r\n  }\r\n\r\n  private initilize(): void {\r\n    this.setDefaultValues();\r\n  }\r\n\r\n  private setDefaultValues(): void {\r\n    this._motionVectorX = 0;\r\n    this._motionVectorY = 0;\r\n\r\n    this._currentSnakeXPosition = this._width / 2 - this.SNAKE_SIZE;\r\n    this._currentSnakeYPosition = this._height / 2 - this.SNAKE_SIZE;\r\n\r\n    this._snakeXpositions = [];\r\n    this._snakeYpositions = [];\r\n  }\r\n}\r\n/*\r\nvar snake = document.getElementById(\"snake\"), //id convas\r\n  ctx = snake.getContext(\"2d\"),\r\n  xS = snake.width, yS = snake.height, // Берем из convas значение ширины и высоты\r\n  qS = 25, //Размер элемента змейки\r\n  xZ = xS / 2 - qS, yZ = yS / 2 - qS, //Координаты позиции змейки, со стартовой позицией\r\n  vK, xK = 0, yK = 0, //Направление (вектор) движения змейки\r\n  xZarr = [], yZarr = [], //Массивы координат змейки\r\n  xF, yF, //Координаты позиции фрукта\r\n  rS = 0; //Счетчик, т.е. число съеденных фруктов\r\n\r\nfruit(); //Вызываем функцию для расчета случайной стартовой позиции фрукта\r\n\r\n//Функция случайного выбора координат для фрукта\r\nfunction fruit() {\r\n  xF = Math.round((xS / qS - 1) * Math.random()) * qS;\r\n  yF = Math.round((yS / qS - 1) * Math.random()) * qS;\r\n  for (var i = 0; i <= (rS); i++) if (xZarr[i] == xF && yZarr[i] == yF) fruit(); //Повторный рандом при наложении на змейку\r\n};\r\n\r\n//Функция обнуления змейки при столкновении с хвостом\r\nfunction feil() {\r\n  ctx.fillStyle = \"White\"; //Вспышка при столкновении\r\n  ctx.fillRect(0, 0, xS, yS);\r\n  xZarr.length = 1; //Стираем X-массив змейки до 1 элемента\r\n  yZarr.length = 1; //Стираем Y-массив змейки до 1 элемента\r\n  rS = 0; //Обнуляем счетчик\r\n};\r\n\r\n//Отслеживаем нажатие клавиш в потоке событий\r\nonkeydown = function (event) {\r\n  event.preventDefault(); //Отменяются исполнения браузером событий event, что-бы не срабатывал скролл(прокрутка) страниц, при нажатии стрелок\r\n  switch (event.keyCode) {\r\n    case 38: case 87: if (vK != 1) { xK = 0; yK = -1; vK = 1 }; break; //Вверх\r\n    case 39: case 68: if (vK != 2) { xK = 1; yK = 0; vK = 2 }; break; //Вправо\r\n    case 40: case 83: if (vK != 1) { xK = 0; yK = 1; vK = 1 }; break; //Вниз\r\n    case 37: case 65: if (vK != 2) { xK = -1; yK = 0; vK = 2 }; break; //Влево\r\n  }\r\n};\r\n\r\n//Функция отрисовки кадра через интервал времени\r\nsetInterval(function () {\r\n\r\n  //Фон и размер игрового поля\r\n  ctx.fillStyle = \"SpringGreen\";\r\n  ctx.fillRect(0, 0, xS, yS);\r\n\r\n  //Тень\r\n  ctx.shadowBlur = 10;\r\n  ctx.shadowColor = \"MidnightBlue\";\r\n\r\n  //Цвет и позиция фрукта\r\n  ctx.beginPath();\r\n  ctx.arc(xF + qS / 2, yF + qS / 2, qS / 1.6, qS / 1.6, Math.PI * 2, true); //Разметка оружности\r\n  ctx.fillStyle = \"Red\"; //Цвет круга\r\n  ctx.fill();\r\n  ctx.strokeStyle = \"Lime\"; //Цвет линии окружности\r\n  ctx.stroke();\r\n\r\n  //Рассчитываем координату при движении и телепортируем при выходе за края\r\n  xZ = xZ + xK * qS;\r\n  if (xZ >= xS) xZ = 0;\r\n  if (xZ < 0) xZ = xS - qS;\r\n  yZ = yZ + yK * qS;\r\n  if (yZ >= yS) yZ = 0;\r\n  if (yZ < 0) yZ = yS - qS;\r\n\r\n  //Проверка на столкновение\r\n  for (var i = 0; i <= (rS); i++) if (xZarr[i] == xZ && yZarr[i] == yZ) feil();\r\n\r\n  //Заменяем координаты в начальных элементах массива\r\n  xZarr.unshift(xZ);\r\n  yZarr.unshift(yZ);\r\n\r\n  //Цвет и цикл вывода массива элементов змейки с отрисовкой\r\n  ctx.fillStyle = \"Blue\";\r\n  for (var i = 0; i <= (rS); i++) ctx.fillRect(xZarr[i] + 1, yZarr[i] + 1, qS - 2, qS - 2); //Отрисовка массива змейки\r\n\r\n  //Кушаем фрукт, при совпадении координат головы змеи и фрукта - выводим новый фрукт и счетчик +1\r\n  if (xF == xZ && yF == yZ) {\r\n    fruit();\r\n    rS++;\r\n  } else { //Иначе - стираем хвост, т.е. змейка перемещается без прироста\r\n    xZarr.pop();\r\n    yZarr.pop();\r\n  }\r\n\r\n  //Выводим счетчик съеденных фруктов\r\n  ctx.fillStyle = \"Black\"; //Цвет шрифта счетчика\r\n  ctx.font = \"bold 13pt Arial\"; //Стиль, размер и шрифт\r\n  ctx.textBaseline = \"middle\"; //Расположение по вертикали\r\n  ctx.textAlign = \"center\"; //Расположение по горизонтали\r\n  ctx.fillText(rS + 1, xF + qS / 2, yF + qS / 2); //Расположение счетчика (привязка к фрукту)\r\n\r\n}, 1000 / 15); //Пауза (кадров в секунду)\r\n*/\r\n","import { Directive, ElementRef, OnInit, HostListener } from '@angular/core';\r\nimport { Snake } from '../classes/stake.class';\r\nimport { Game } from '../classes/game.class';\r\nimport { Fruit } from '../classes/fruit.class';\r\n\r\n@Directive({\r\n  selector: '[snake]'\r\n})\r\nexport class SnakeDirective implements OnInit {\r\n  private _score: number;\r\n  private _block: number;\r\n  private _keyBlock: boolean;\r\n\r\n  private _snake: Snake;\r\n  private _game: Game;\r\n  private _fruit: Fruit;\r\n  private _canvas: HTMLCanvasElement;\r\n  private _context: CanvasRenderingContext2D;\r\n\r\n  private _width: number;\r\n  private _height: number;\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeyPress(event: KeyboardEvent) {\r\n    this.keyPressListener(event);\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef) {\r\n    this._canvas = this._elementRef.nativeElement;\r\n    this._context = this._canvas.getContext('2d');\r\n\r\n    this._width = this._canvas.width;\r\n    this._height = this._canvas.height;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._score = 0;\r\n\r\n    this._snake = new Snake(this._width, this._height);\r\n    this._game = new Game();\r\n    this._fruit = new Fruit(this._width, this._height, this._snake.failCheck.bind(this._snake));\r\n\r\n    this._game.gameStep.subscribe((eventObject: {}) => this.updateElement(eventObject));\r\n    this.startGame();\r\n  }\r\n\r\n  private keyPressListener(event: KeyboardEvent) {\r\n    event.preventDefault();\r\n    console.log(event);\r\n\r\n    switch (event.keyCode) {\r\n      case 38: case 87: if (this._block != 1 && !this._keyBlock) {\r\n        this._snake.motionVectorX = 0;\r\n        this._snake.motionVectorY = -1;\r\n        this._block = 1;\r\n        this._keyBlock = true;\r\n      }; break;\r\n      case 39: case 68: if (this._block != 2 && !this._keyBlock) {\r\n        this._snake.motionVectorX = 1;\r\n        this._snake.motionVectorY = 0;\r\n        this._block = 2;\r\n        this._keyBlock = true;\r\n      }; break;\r\n      case 40: case 83: if (this._block != 1 && !this._keyBlock) {\r\n        this._snake.motionVectorX = 0;\r\n        this._snake.motionVectorY = 1;\r\n        this._block = 1;\r\n        this._keyBlock = true;\r\n      }; break;\r\n      case 37: case 65: if (this._block != 2 && !this._keyBlock) {\r\n        this._snake.motionVectorX = -1;\r\n        this._snake.motionVectorY = 0;\r\n        this._block = 2;\r\n        this._keyBlock = true;\r\n      }; break;\r\n    }\r\n  }\r\n\r\n  private startGame() {\r\n    this._fruit.generateFruit();\r\n    this._game.start();\r\n  }\r\n\r\n  private updateElement(eventObject: {}) {\r\n    this._keyBlock = false;\r\n\r\n    this.updateFill();\r\n    this.generateFruit();\r\n\r\n    this._snake.updateSnakePosition();\r\n\r\n    if (this._snake.checkCollision()) {\r\n      this.gameFail();\r\n      this.startGame();\r\n      return;\r\n    } else {\r\n      this._snake.snakeStape();\r\n    }\r\n\r\n    this.snakeFill();\r\n    if (this._snake.snakeXPosition === this._fruit.fruitXPosition && this._snake.snakeYPosition === this._fruit.fruitYPosition) {\r\n      this.scoreUp();\r\n    } else {\r\n      this._snake.snakeNoResize();\r\n    }\r\n  }\r\n\r\n  private scoreUp() {\r\n    this._score++;\r\n    this.updateFill();\r\n    this._fruit.generateFruit();\r\n    this.generateFruit();\r\n    this.snakeFill();\r\n  }\r\n\r\n  private updateFill() {\r\n    this._context.fillStyle = 'SpringGreen';\r\n    this._context.fillRect(0, 0, this._width, this._height);\r\n\r\n    this._context.shadowBlur = 2;\r\n    this._context.shadowColor = 'MidnightBlue';\r\n  }\r\n\r\n  private generateFruit() {\r\n    let fruitSize = this._fruit.fruitSize,\r\n      fruitXPosition = this._fruit.fruitXPosition,\r\n      fruitYPosition = this._fruit.fruitYPosition;\r\n\r\n    this._context.beginPath();\r\n    this._context.arc(fruitXPosition + fruitSize / 2, fruitYPosition + fruitSize / 2, fruitSize / 1.6, fruitSize / 1.6, Math.PI * 2, true)\r\n    this._context.fillStyle = 'Red';\r\n    this._context.fill();\r\n    this._context.strokeStyle = 'Lime';\r\n    this._context.stroke();\r\n\r\n    this.updateScore();\r\n  }\r\n\r\n  private snakeFill() {\r\n    let snakeSize = this._snake.snakeSize,\r\n      snakeXPositions = this._snake.snakeXPositions,\r\n      snakeYPositions = this._snake.snakeYPositions;\r\n\r\n    this._context.fillStyle = 'Blue';\r\n    for (let index = 0; index <= snakeXPositions.length; index++) {\r\n      this._context.fillRect(snakeXPositions[index] + 1, snakeYPositions[index] + 1, snakeSize - 2, snakeSize - 2);\r\n    }\r\n  }\r\n\r\n  private gameFail() {\r\n    this._game.stop();\r\n    this._score = 0;\r\n\r\n    this._snake.resetSnake();\r\n\r\n    this._context.fillStyle = 'White';\r\n    this.updateFill();\r\n  }\r\n\r\n  private updateScore() {\r\n    let fruitSize = this._fruit.fruitSize,\r\n      fruitXPosition = this._fruit.fruitXPosition,\r\n      fruitYPosition = this._fruit.fruitYPosition;\r\n\r\n    this._context.fillStyle = 'Black';\r\n    this._context.font = 'bold 13pt Arial';\r\n    this._context.textBaseline = 'middle';\r\n    this._context.textAlign = 'center';\r\n    this._context.fillText(`${this._score + 1}`, fruitXPosition + fruitSize / 2, fruitYPosition + fruitSize / 2);\r\n  }\r\n}\r\n"],"sourceRoot":""}